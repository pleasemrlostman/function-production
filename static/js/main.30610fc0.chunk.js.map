{"version":3,"sources":["functions/start-rating/starRating.jsx","functions/react-hook-form/reactHookForm.jsx","functions/slide/Slide.js","functions/nav/Nav.jsx","functions/tab-menu/TabMenu.jsx","functions/board/Board.jsx","functions/back/Back.jsx","functions/boardPackage/BoardPackage.jsx","App.js","index.js"],"names":["StarRating","useState","clicked","setClicked","LeftLine","StarRatings","map","el","idx","FaStarIcon","size","className","onClick","index","clickStates","i","handleStarClick","filter","Boolean","length","FunctionDescription","href","styled","div","ReactHookForm","useForm","register","handleSubmit","errors","watch","formState","console","log","action","onSubmit","data","error","InputWrap","Input","type","placeholder","required","minLength","value","message","maxLength","nickname","pattern","userID","input","Slide","spaceBetween","slidesPerView","onSlideChange","onSwiper","swiper","SlideCover","Nav","activeNavIndex","setActiveNavIndex","StyledNav","NavLink","to","nav","Link","TabMenu","activeTabIndex","setActiveTabIndex","StyledTabMenu","TabMenuTitle","TabMenuContent","props","Board","posts","setPosts","setLoading","currentPage","setCurrentPage","postPerPage","useEffect","a","axios","get","response","fetchData","indexOfLast","indexOfFirst","tmp","pageNumbers","Math","ceil","push","BoardWrap","slice","post","BoardList","id","title","body","Pagination","number","PagiBtn","button","Back","history","useHistory","StyledBack","location","pathname","goBack","BackMenuIcon","IoChevronBackOutline","BoardPackage","currentPosts","StyledPagination","itemClass","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","onChange","page","App","Links","NewLink","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30610fc0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { FaStar } from \"react-icons/fa\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StarRating = () => {\r\n    const [clicked, setClicked] = useState([false, false, false, false, false]);\r\n    const ARRAY = [0, 1, 2, 3, 4];\r\n\r\n    const handleStarClick = (index) => {\r\n        let clickStates = [...clicked];\r\n        for (let i = 0; i < 5; i++) {\r\n            clickStates[i] = i <= index ? true : false;\r\n        }\r\n        setClicked(clickStates);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <LeftLine>\r\n                <StarRatings>\r\n                    {ARRAY.map((el, idx) => {\r\n                        return (\r\n                            <FaStarIcon>\r\n                                <FaStar\r\n                                    key={idx}\r\n                                    size={50}\r\n                                    className={\r\n                                        clicked[el] && \"star-rating__check\"\r\n                                    }\r\n                                    onClick={() => {\r\n                                        handleStarClick(el);\r\n                                    }}\r\n                                />\r\n                            </FaStarIcon>\r\n                        );\r\n                    })}\r\n                    <p>{`내가 매긴 별점 갯수는 ${\r\n                        clicked.filter(Boolean).length\r\n                    }점`}</p>\r\n                </StarRatings>\r\n                <FunctionDescription>\r\n                    <h2>별점기능</h2>\r\n                    <ul>\r\n                        <li>\r\n                            아이콘 설치{\" \"}\r\n                            <a href=\"https://velog.io/@ssxst31/TIL-43-%EB%A6%AC%EC%95%A1%ED%8A%B8-%EC%95%84%EC%9D%B4%EC%BD%98react-icons\">\r\n                                사용법 링크\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                    <h5>제작방법</h5>\r\n                    <ol>\r\n                        <li>별점 체크에 사용할 clicked 배열 state 생성</li>\r\n                        <li>별 갯수를 정할 ARRAY [0,1,2,3,4] 배열 제작</li>\r\n                        <li>ARRAY 로 map함수 돌림, key값으로 두번째인자</li>\r\n                        <li>handleStarClick 함수생성</li>\r\n                        <li>\r\n                            내부서 clicked 배열을 deep copy한 후 반복문\r\n                            5번돌리기\r\n                        </li>\r\n                        <li>handleStarClick의 인자로 ARAAY의 값들 전달</li>\r\n                        <li>\r\n                            받은값보다 반복분으로 돌린 i값이 작으면 해당 값을\r\n                            true로 변경해주기\r\n                        </li>\r\n                    </ol>\r\n                    <h5></h5>\r\n                </FunctionDescription>\r\n            </LeftLine>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default StarRating;\r\n\r\nconst FunctionDescription = styled.div`\r\n    width: 50%;\r\n    border: 1px solid #ececec;\r\n    padding: 1rem;\r\n`;\r\n\r\nconst LeftLine = styled.div``;\r\n\r\nconst StarRatings = styled.div`\r\n    display: flex;\r\n    width: fit-content;\r\n    width: fit-content;\r\n    border: 1px solid blue;\r\n    &:hover {\r\n        color: #fcc419;\r\n        transition: color 0.1s linear;\r\n    }\r\n    .star-rating__check {\r\n        color: #fcc419;\r\n    }\r\n`;\r\n\r\nconst FaStarIcon = styled.div`\r\n    cursor: pointer;\r\n    transition: color 0.1s linear;\r\n    &:hover ~ div {\r\n        color: #000;\r\n        transition: color 0.1s linear;\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ReactHookForm = () => {\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        watch,\r\n        formState: { errors },\r\n    } = useForm();\r\n\r\n    // console.log(watch());\r\n    console.log(errors);\r\n    // onErrors와 같은값을 반환한다.\r\n    const onSubmit = (data) => console.log(data);\r\n    const onError = (error) => {\r\n        // console.log(error);\r\n    };\r\n\r\n    return (\r\n        <form action=\"\" onSubmit={handleSubmit(onSubmit, onError)}>\r\n            <InputWrap>\r\n                <Input\r\n                    type=\"text\"\r\n                    placeholder=\"닉네임\"\r\n                    {...register(\"nickname\", {\r\n                        required: \"닉네임을 작성해주세요\",\r\n                        minLength: {\r\n                            value: 5,\r\n                            message:\r\n                                \"닉네임은 5글자 이상으로 작성하셔야 합니다.\",\r\n                        },\r\n                        maxLength: {\r\n                            value: 12,\r\n                            message:\r\n                                \"닉네임은 12글자 이하로 작성하셔야 합니다.\",\r\n                        },\r\n                    })}\r\n                />\r\n                <button>중복확인</button>\r\n            </InputWrap>\r\n            {/* {errors.nickname && <span>{errors.nickname.message}</span>} */}\r\n            {/* // 이런 애들을 옵셔널 체이닝이라고 한다 해당 객체값의 프로퍼티가 있으면 그걸 보여주지만 없으면 undefined나 null을 리턴한다 */}\r\n            {errors?.nickname?.message}\r\n            <InputWrap>\r\n                <Input\r\n                    type=\"text\"\r\n                    placeholder=\"아이디(이메일주소)\"\r\n                    {...register(\"userID\", {\r\n                        required: \"아이디(이메일)을 작성해주세요\",\r\n                        pattern: {\r\n                            // value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                            value: /^(([^<>()\\[\\].,;:\\s@\"]+(\\.[^<>()\\[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i,\r\n                            message: \"유효하지 않은 이메일 형식입니다.\",\r\n                        },\r\n                    })}\r\n                />\r\n                <button>중복확인</button>\r\n            </InputWrap>\r\n            {errors?.userID?.message}\r\n            <InputWrap>\r\n                <Input\r\n                    type=\"password\"\r\n                    placeholder=\"비밀번호\"\r\n                    {...register(\"password\")}\r\n                />\r\n            </InputWrap>\r\n            <InputWrap>\r\n                <Input\r\n                    type=\"password\"\r\n                    placeholder=\"비밀번호확인\"\r\n                    {...register(\"passwordCheck\")}\r\n                />\r\n            </InputWrap>\r\n            <InputWrap>\r\n                <Input\r\n                    type=\"text\"\r\n                    placeholder=\"휴대전화번호\"\r\n                    {...register(\"phoneNumber\")}\r\n                />\r\n                <button>인증번호 전송</button>\r\n            </InputWrap>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ReactHookForm;\r\n\r\nconst InputWrap = styled.div`\r\n    border: 1px solid blue;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    border: 1px solid red;\r\n    padding: 10px;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/swiper.min.css\";\r\n\r\n// https://stackoverflow.com/questions/69154197/module-not-found-cant-resolve-swiper-css\r\n// 스와이퍼 설치하고 사용할때는 해당버전을 이용하도록 하자 (6.8.4)\r\nconst Slide = () => {\r\n    return (\r\n        <Swiper\r\n            spaceBetween={50}\r\n            slidesPerView={1}\r\n            onSlideChange={() => console.log(\"slide change\")}\r\n            onSwiper={(swiper) => console.log(swiper)}\r\n        >\r\n            <SwiperSlide>\r\n                <SlideCover>정</SlideCover>\r\n            </SwiperSlide>\r\n            <SwiperSlide>\r\n                <SlideCover>정재</SlideCover>\r\n            </SwiperSlide>\r\n            <SwiperSlide>\r\n                <SlideCover>정재훈</SlideCover>\r\n            </SwiperSlide>\r\n            <SwiperSlide>\r\n                <SlideCover>정재훈정</SlideCover>\r\n            </SwiperSlide>\r\n        </Swiper>\r\n    );\r\n};\r\n\r\nexport default Slide;\r\n\r\nconst SlideCover = styled.div`\r\n    border: 1px solid red;\r\n    cursor: pointer;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n    AiOutlineHome,\r\n    AiFillHome,\r\n    AiOutlineBell,\r\n    AiFillBell,\r\n} from \"react-icons/ai\";\r\n\r\nimport { IoCartOutline, IoCartSharp } from \"react-icons/io5\";\r\nimport {\r\n    RiUser3Line,\r\n    RiUser3Fill,\r\n    RiCheckboxMultipleBlankLine,\r\n    RiCheckboxMultipleBlankFill,\r\n} from \"react-icons/ri\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n    const [activeNavIndex, setActiveNavIndex] = useState(1);\r\n\r\n    return (\r\n        <StyledNav>\r\n            <NavLink\r\n                to=\"/\"\r\n                onClick={() => {\r\n                    setActiveNavIndex(1);\r\n                }}\r\n            >\r\n                {activeNavIndex === 1 ? <AiFillHome /> : <AiOutlineHome />}\r\n            </NavLink>\r\n            <NavLink\r\n                to=\"/star\"\r\n                onClick={() => {\r\n                    setActiveNavIndex(2);\r\n                }}\r\n            >\r\n                {activeNavIndex === 2 ? <AiFillBell /> : <AiOutlineBell />}\r\n            </NavLink>\r\n            <NavLink\r\n                to=\"/react-hook-form\"\r\n                onClick={() => {\r\n                    setActiveNavIndex(3);\r\n                }}\r\n            >\r\n                {activeNavIndex === 3 ? <IoCartSharp /> : <IoCartOutline />}\r\n            </NavLink>\r\n            <NavLink\r\n                to=\"/slide\"\r\n                onClick={() => {\r\n                    setActiveNavIndex(4);\r\n                }}\r\n            >\r\n                {activeNavIndex === 4 ? <RiUser3Fill /> : <RiUser3Line />}\r\n            </NavLink>\r\n            <NavLink\r\n                to=\"/star\"\r\n                onClick={() => {\r\n                    setActiveNavIndex(5);\r\n                }}\r\n            >\r\n                {activeNavIndex === 5 ? (\r\n                    <RiCheckboxMultipleBlankFill />\r\n                ) : (\r\n                    <RiCheckboxMultipleBlankLine />\r\n                )}\r\n            </NavLink>\r\n        </StyledNav>\r\n    );\r\n};\r\n\r\nexport default Nav;\r\n\r\nconst StyledNav = styled.nav`\r\n    background-color: #fff;\r\n    border-top: 1px solid #ececec;\r\n    max-width: 1200px;\r\n    width: 100%;\r\n    margin: auto;\r\n    display: flex;\r\n    align-items: center;\r\n    position: fixed;\r\n    bottom: 0;\r\n    left: 50%;\r\n    transform: translate(-50%);\r\n`;\r\nconst NavLink = styled(Link)`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 20%;\r\n    font-size: 2rem;\r\n    color: #131313;\r\n    padding: 10px;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TabMenu = () => {\r\n    const [activeTabIndex, setActiveTabIndex] = useState(1);\r\n\r\n    return (\r\n        <StyledTabMenu>\r\n            <TabMenuTitle activeTabIndex={activeTabIndex}>\r\n                <div\r\n                    onClick={() => {\r\n                        setActiveTabIndex(1);\r\n                    }}\r\n                >\r\n                    텝메뉴1\r\n                </div>\r\n                <div\r\n                    onClick={() => {\r\n                        setActiveTabIndex(2);\r\n                    }}\r\n                >\r\n                    텝메뉴2\r\n                </div>\r\n                <div\r\n                    onClick={() => {\r\n                        setActiveTabIndex(3);\r\n                    }}\r\n                >\r\n                    텝메뉴3\r\n                </div>\r\n                <div\r\n                    onClick={() => {\r\n                        setActiveTabIndex(4);\r\n                    }}\r\n                >\r\n                    텝메뉴4\r\n                </div>\r\n                <span></span>\r\n            </TabMenuTitle>\r\n            <TabMenuContent>\r\n                {activeTabIndex === 1 ? (\r\n                    <div>\r\n                        <ol>\r\n                            <li>Dark</li>\r\n                            <li>Red</li>\r\n                            <li>Blue</li>\r\n                        </ol>\r\n                    </div>\r\n                ) : null}\r\n                {activeTabIndex === 2 ? (\r\n                    <div>\r\n                        <ol>\r\n                            <li>검정</li>\r\n                            <li>빨강</li>\r\n                            <li>파랑</li>\r\n                        </ol>\r\n                    </div>\r\n                ) : null}\r\n                {activeTabIndex === 3 ? (\r\n                    <div>\r\n                        <ol>\r\n                            <li>1</li>\r\n                            <li>2</li>\r\n                            <li>3</li>\r\n                        </ol>\r\n                    </div>\r\n                ) : null}\r\n                {activeTabIndex === 4 ? (\r\n                    <div>\r\n                        <ol>\r\n                            <li>One</li>\r\n                            <li>Two</li>\r\n                            <li>Three</li>\r\n                        </ol>\r\n                    </div>\r\n                ) : null}\r\n            </TabMenuContent>\r\n        </StyledTabMenu>\r\n    );\r\n};\r\n\r\nexport default TabMenu;\r\n\r\nconst StyledTabMenu = styled.div`\r\n    border: 1px solid red;\r\n`;\r\n\r\nconst TabMenuTitle = styled.div`\r\n    display: flex;\r\n    border-bottom: 1px solid #ececec;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: relative;\r\n    div {\r\n        padding: 10px;\r\n        width: 25%;\r\n        cursor: pointer;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n    span {\r\n        border: 1px solid red;\r\n        position: absolute;\r\n        left: ${(props) => {\r\n            if (props.activeTabIndex === 1) {\r\n                return \"0px\";\r\n            } else if (props.activeTabIndex === 2) {\r\n                return \"25%\";\r\n            } else if (props.activeTabIndex === 3) {\r\n                return \"50%\";\r\n            } else if (props.activeTabIndex === 4) {\r\n                return \"75%\";\r\n            }\r\n        }};\r\n        bottom: 0;\r\n        width: 25%;\r\n        transition: left 0.3s linear;\r\n    }\r\n`;\r\n\r\nconst TabMenuContent = styled.div`\r\n    div {\r\n    }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Board = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postPerPage, setPostPerPage] = useState(10);\r\n\r\n    // ---------------------------------------------\r\n    // ---------------------------------------------\r\n    //      제이슨으로 데이터 받아오기 시작\r\n    // ---------------------------------------------\r\n    // ---------------------------------------------\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const response = await axios.get(\r\n                    \"https://jsonplaceholder.typicode.com/posts\"\r\n                );\r\n                await setPosts(response.data);\r\n                setLoading(false);\r\n            } catch (e) {\r\n                console.log(e.response);\r\n            }\r\n        };\r\n        fetchData();\r\n    }, []);\r\n    // ---------------------------------------------\r\n    // ---------------------------------------------\r\n    //      제이슨으로 데이터 받아오기  끝\r\n    // ---------------------------------------------\r\n    // ---------------------------------------------\r\n\r\n    // ---------------------------------------------\r\n    // ---------------------------------------------\r\n    //      제이슨으로 받아온 데이터들 잘라주기 시작\r\n    // ---------------------------------------------\r\n    // ---------------------------------------------\r\n    const indexOfLast = currentPage * postPerPage; // 10\r\n    const indexOfFirst = indexOfLast - postPerPage; // 10 -10\r\n    function currentPosts(tmp) {\r\n        let currentPosts = 0;\r\n        currentPosts = tmp.slice(indexOfFirst, indexOfLast);\r\n        return currentPosts;\r\n    }\r\n    // ---------------------------------------------\r\n    // ---------------------------------------------\r\n    //      제이슨으로 받아온 데이터들 잘라주기 시작\r\n    // ---------------------------------------------\r\n    // ---------------------------------------------\r\n\r\n    // ---------------------------------------------\r\n    // ---------------------------------------------\r\n    //      페이지네이션 작업 시작\r\n    // ---------------------------------------------\r\n    // ---------------------------------------------\r\n\r\n    const pageNumbers = [];\r\n    for (let i = 1; i <= Math.ceil(posts.length / postPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n    // ---------------------------------------------\r\n    // ---------------------------------------------\r\n    //      페이지네이션 작업 끝\r\n    // ---------------------------------------------\r\n    // ---------------------------------------------\r\n\r\n    return (\r\n        <BoardWrap>\r\n            {currentPosts(posts).map((post) => {\r\n                return (\r\n                    <BoardList key={post.id}>\r\n                        <div>\r\n                            <span>{post.id}.</span>\r\n                            <span>{post.title}</span>\r\n                        </div>\r\n                        <p>{post.body}</p>\r\n                    </BoardList>\r\n                );\r\n            })}\r\n            <Pagination>\r\n                {pageNumbers.map((number) => {\r\n                    return (\r\n                        <PagiBtn\r\n                            onClick={() => {\r\n                                setCurrentPage(number);\r\n                            }}\r\n                        >\r\n                            {number}\r\n                        </PagiBtn>\r\n                    );\r\n                })}\r\n            </Pagination>\r\n        </BoardWrap>\r\n    );\r\n};\r\n\r\nexport default Board;\r\n\r\nconst BoardWrap = styled.div`\r\n    border: 1px solid red;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    justify-content: center;\r\n`;\r\n\r\nconst BoardList = styled.div`\r\n    /* width: 100%; */\r\n    border: 1px solid blue;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    justify-content: flex-start;\r\n    padding: 5px;\r\n    margin-bottom: 5px;\r\n    &:last-child {\r\n        margin-bottom: 0;\r\n    }\r\n    div {\r\n        margin-bottom: 0;\r\n    }\r\n    p {\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nconst Pagination = styled.div`\r\n    border: 1px solid red;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n`;\r\n\r\nconst PagiBtn = styled.button`\r\n    width: fit-content;\r\n    outline: none;\r\n    font-size: 1.625rem;\r\n    padding: 10px;\r\n    border: 1px solid #131313;\r\n    background-color: #fff;\r\n    color: red;\r\n    cursor: pointer;\r\n    &:hover {\r\n        border-color: red;\r\n        background-color: red;\r\n        color: #fff;\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { IoChevronBackOutline } from \"react-icons/io5\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Back = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <StyledBack\r\n            onClick={() => {\r\n                // history.goBack();\r\n\r\n                if (history.location.pathname === \"/\") {\r\n                    history.push(\"/\");\r\n                } else {\r\n                    history.goBack();\r\n                }\r\n            }}\r\n        >\r\n            <BackMenuIcon />\r\n            <span>뒤로가기</span>\r\n        </StyledBack>\r\n    );\r\n};\r\n\r\nexport default Back;\r\n\r\nconst StyledBack = styled.div`\r\n    border: 1px solid red;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    padding: 10px;\r\n`;\r\n\r\nconst BackMenuIcon = styled(IoChevronBackOutline)`\r\n    font-size: 1.625rem;\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport \"./BoardPackage.css\";\r\n\r\nconst BoardPackage = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postPerPage, setPostPerPage] = useState(10);\r\n\r\n    // ---------------------------------------------\r\n    // ---------------------------------------------\r\n    //      제이슨으로 데이터 받아오기 시작\r\n    // ---------------------------------------------\r\n    // ---------------------------------------------\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const response = await axios.get(\r\n                    \"https://jsonplaceholder.typicode.com/posts\"\r\n                );\r\n                await setPosts(response.data);\r\n                setLoading(false);\r\n            } catch (e) {\r\n                console.log(e.response);\r\n            }\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    // ---------------------------------------------\r\n    // ---------------------------------------------\r\n    //      제이슨으로 데이터 받아오기  끝\r\n    // ---------------------------------------------\r\n    // ---------------------------------------------\r\n\r\n    // ---------------------------------------------\r\n    // ---------------------------------------------\r\n    //      제이슨으로 받아온 데이터들 잘라주기 시작\r\n    // ---------------------------------------------\r\n    // ---------------------------------------------\r\n    const indexOfLast = currentPage * postPerPage; // 10\r\n    const indexOfFirst = indexOfLast - postPerPage; // 10 -10\r\n    function currentPosts(tmp) {\r\n        let currentPosts = 0;\r\n        currentPosts = tmp.slice(indexOfFirst, indexOfLast);\r\n        return currentPosts;\r\n    }\r\n    // ---------------------------------------------\r\n    // ---------------------------------------------\r\n    //      제이슨으로 받아온 데이터들 잘라주기 시작\r\n    // ---------------------------------------------\r\n    // ---------------------------------------------\r\n\r\n    // ---------------------------------------------\r\n    // ---------------------------------------------\r\n    //      페이지네이션 작업 시작\r\n    // ---------------------------------------------\r\n    // ---------------------------------------------\r\n\r\n    const pageNumbers = [];\r\n    for (let i = 1; i <= Math.ceil(posts.length / postPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n    // ---------------------------------------------\r\n    // ---------------------------------------------\r\n    //      페이지네이션 작업 끝\r\n    // ---------------------------------------------\r\n    // ---------------------------------------------\r\n\r\n    return (\r\n        <BoardWrap>\r\n            {currentPosts(posts).map((post) => {\r\n                return (\r\n                    <BoardList key={post.id}>\r\n                        <div>\r\n                            <span>{post.id}.</span>\r\n                            <span>{post.title}</span>\r\n                        </div>\r\n                        <p>{post.body}</p>\r\n                    </BoardList>\r\n                );\r\n            })}\r\n            <StyledPagination\r\n                itemClass={\"pagination__li\"}\r\n                activePage={currentPage}\r\n                itemsCountPerPage={postPerPage}\r\n                totalItemsCount={posts.length}\r\n                pageRangeDisplayed={currentPosts(posts).length}\r\n                onChange={(page) => {\r\n                    setCurrentPage(page);\r\n                }}\r\n            ></StyledPagination>\r\n        </BoardWrap>\r\n    );\r\n};\r\n\r\nexport default BoardPackage;\r\n\r\nconst BoardWrap = styled.div`\r\n    border: 1px solid red;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    justify-content: center;\r\n`;\r\n\r\nconst BoardList = styled.div`\r\n    /* width: 100%; */\r\n    border: 1px solid blue;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    justify-content: flex-start;\r\n    padding: 5px;\r\n    margin-bottom: 5px;\r\n    &:last-child {\r\n        margin-bottom: 0;\r\n    }\r\n    div {\r\n        margin-bottom: 0;\r\n    }\r\n    p {\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nconst StyledPagination = styled(Pagination)`\r\n    .pagination {\r\n        border: 1px solid green;\r\n    }\r\n`;\r\n","import StarRating from \"./functions/start-rating/starRating\";\nimport { HashRouter, Route, Link } from \"react-router-dom\";\nimport ReactHookForm from \"./functions/react-hook-form/reactHookForm\";\nimport styled from \"styled-components\";\nimport Slide from \"./functions/slide/Slide\";\nimport Nav from \"./functions/nav/Nav\";\nimport TabMenu from \"./functions/tab-menu/TabMenu\";\nimport Board from \"./functions/board/Board\";\nimport Back from \"./functions/back/Back\";\nimport BoardPackage from \"./functions/boardPackage/BoardPackage\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <HashRouter>\n                <Links>\n                    <NewLink to=\"/star\">별점</NewLink>\n                    <NewLink to=\"/react-hook-form\">리액트 훅 폼</NewLink>\n                    <NewLink to=\"/slide\">슬라이드</NewLink>\n                    <NewLink to=\"/tab-menu\">텝메뉴</NewLink>\n                    <NewLink to=\"/board\">게시판</NewLink>\n                    <NewLink to=\"/board-package\">게시판(패키지)</NewLink>\n                </Links>\n                <Back />\n                <Route exact path=\"/star\" component={StarRating}></Route>\n                <Route\n                    exact\n                    path=\"/react-hook-form\"\n                    component={ReactHookForm}\n                ></Route>\n                <Route exact path=\"/slide\" component={Slide}></Route>\n                <Route exact path=\"/tab-menu\" component={TabMenu}></Route>\n                <Route exact path=\"/board\" component={Board}></Route>\n                <Route\n                    exact\n                    path=\"/board-package\"\n                    component={BoardPackage}\n                ></Route>\n                <Nav />\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default App;\n\nconst Links = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    gap: 10px;\n`;\n\nconst NewLink = styled(Link)`\n    padding: 10px;\n    text-decoration: none;\n    color: #fff;\n    background-color: #333;\n    border-radius: 5px;\n    margin-bottom: 30px;\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}