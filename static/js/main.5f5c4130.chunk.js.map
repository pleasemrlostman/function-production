{"version":3,"sources":["functions/start-rating/starRating.jsx","functions/react-hook-form/reactHookForm.jsx","functions/slide/Slide.js","functions/nav/Nav.jsx","App.js","index.js"],"names":["StarRating","useState","clicked","setClicked","LeftLine","StarRatings","map","el","idx","FaStarIcon","size","className","onClick","index","clickStates","i","handleStarClick","filter","Boolean","length","FunctionDescription","href","styled","div","ReactHookForm","useForm","register","handleSubmit","errors","watch","formState","console","log","action","onSubmit","data","error","InputWrap","Input","type","placeholder","required","minLength","value","message","maxLength","nickname","pattern","userID","input","Slide","spaceBetween","slidesPerView","onSlideChange","onSwiper","swiper","SlideCover","Nav","activeNavIndex","setActiveNavIndex","StyledNav","NavLink","to","nav","Link","App","Links","NewLink","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f5c4130.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { FaStar } from \"react-icons/fa\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StarRating = () => {\r\n    const [clicked, setClicked] = useState([false, false, false, false, false]);\r\n    const ARRAY = [0, 1, 2, 3, 4];\r\n\r\n    const handleStarClick = (index) => {\r\n        let clickStates = [...clicked];\r\n        for (let i = 0; i < 5; i++) {\r\n            clickStates[i] = i <= index ? true : false;\r\n        }\r\n        setClicked(clickStates);\r\n    };\r\n\r\n    return (\r\n        <LeftLine>\r\n            <StarRatings>\r\n                {ARRAY.map((el, idx) => {\r\n                    return (\r\n                        <FaStarIcon>\r\n                            <FaStar\r\n                                key={idx}\r\n                                size={50}\r\n                                className={clicked[el] && \"star-rating__check\"}\r\n                                onClick={() => {\r\n                                    handleStarClick(el);\r\n                                }}\r\n                            />\r\n                        </FaStarIcon>\r\n                    );\r\n                })}\r\n                <p>{`내가 매긴 별점 갯수는 ${\r\n                    clicked.filter(Boolean).length\r\n                }점`}</p>\r\n            </StarRatings>\r\n            <FunctionDescription>\r\n                <h2>별점기능</h2>\r\n                <ul>\r\n                    <li>\r\n                        아이콘 설치{\" \"}\r\n                        <a href=\"https://velog.io/@ssxst31/TIL-43-%EB%A6%AC%EC%95%A1%ED%8A%B8-%EC%95%84%EC%9D%B4%EC%BD%98react-icons\">\r\n                            사용법 링크\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n                <h5>제작방법</h5>\r\n                <ol>\r\n                    <li>별점 체크에 사용할 clicked 배열 state 생성</li>\r\n                    <li>별 갯수를 정할 ARRAY [0,1,2,3,4] 배열 제작</li>\r\n                    <li>ARRAY 로 map함수 돌림, key값으로 두번째인자</li>\r\n                    <li>handleStarClick 함수생성</li>\r\n                    <li>\r\n                        내부서 clicked 배열을 deep copy한 후 반복문 5번돌리기\r\n                    </li>\r\n                    <li>handleStarClick의 인자로 ARAAY의 값들 전달</li>\r\n                    <li>\r\n                        받은값보다 반복분으로 돌린 i값이 작으면 해당 값을 true로\r\n                        변경해주기\r\n                    </li>\r\n                </ol>\r\n                <h5></h5>\r\n            </FunctionDescription>\r\n        </LeftLine>\r\n    );\r\n};\r\n\r\nexport default StarRating;\r\n\r\nconst FunctionDescription = styled.div`\r\n    width: 50%;\r\n    border: 1px solid #ececec;\r\n    padding: 1rem;\r\n`;\r\n\r\nconst LeftLine = styled.div``;\r\n\r\nconst StarRatings = styled.div`\r\n    display: flex;\r\n    width: fit-content;\r\n    width: fit-content;\r\n    border: 1px solid blue;\r\n    &:hover {\r\n        color: #fcc419;\r\n        transition: color 0.1s linear;\r\n    }\r\n    .star-rating__check {\r\n        color: #fcc419;\r\n    }\r\n`;\r\n\r\nconst FaStarIcon = styled.div`\r\n    cursor: pointer;\r\n    transition: color 0.1s linear;\r\n    &:hover ~ div {\r\n        color: #000;\r\n        transition: color 0.1s linear;\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ReactHookForm = () => {\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        watch,\r\n        formState: { errors },\r\n    } = useForm();\r\n\r\n    // console.log(watch());\r\n    console.log(errors);\r\n    // onErrors와 같은값을 반환한다.\r\n    const onSubmit = (data) => console.log(data);\r\n    const onError = (error) => {\r\n        // console.log(error);\r\n    };\r\n\r\n    return (\r\n        <form action=\"\" onSubmit={handleSubmit(onSubmit, onError)}>\r\n            <InputWrap>\r\n                <Input\r\n                    type=\"text\"\r\n                    placeholder=\"닉네임\"\r\n                    {...register(\"nickname\", {\r\n                        required: \"닉네임을 작성해주세요\",\r\n                        minLength: {\r\n                            value: 5,\r\n                            message:\r\n                                \"닉네임은 5글자 이상으로 작성하셔야 합니다.\",\r\n                        },\r\n                        maxLength: {\r\n                            value: 12,\r\n                            message:\r\n                                \"닉네임은 12글자 이하로 작성하셔야 합니다.\",\r\n                        },\r\n                    })}\r\n                />\r\n                <button>중복확인</button>\r\n            </InputWrap>\r\n            {/* {errors.nickname && <span>{errors.nickname.message}</span>} */}\r\n            {/* // 이런 애들을 옵셔널 체이닝이라고 한다 해당 객체값의 프로퍼티가 있으면 그걸 보여주지만 없으면 undefined나 null을 리턴한다 */}\r\n            {errors?.nickname?.message}\r\n            <InputWrap>\r\n                <Input\r\n                    type=\"text\"\r\n                    placeholder=\"아이디(이메일주소)\"\r\n                    {...register(\"userID\", {\r\n                        required: \"아이디(이메일)을 작성해주세요\",\r\n                        pattern: {\r\n                            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                            message: \"유효하지 않은 이메일 형식입니다.\",\r\n                        },\r\n                    })}\r\n                />\r\n                <button>중복확인</button>\r\n            </InputWrap>\r\n            {errors?.userID?.message}\r\n            <InputWrap>\r\n                <Input\r\n                    type=\"password\"\r\n                    placeholder=\"비밀번호\"\r\n                    {...register(\"password\")}\r\n                />\r\n            </InputWrap>\r\n            <InputWrap>\r\n                <Input\r\n                    type=\"password\"\r\n                    placeholder=\"비밀번호확인\"\r\n                    {...register(\"passwordCheck\")}\r\n                />\r\n            </InputWrap>\r\n            <InputWrap>\r\n                <Input\r\n                    type=\"text\"\r\n                    placeholder=\"휴대전화번호\"\r\n                    {...register(\"phoneNumber\")}\r\n                />\r\n                <button>인증번호 전송</button>\r\n            </InputWrap>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ReactHookForm;\r\n\r\nconst InputWrap = styled.div`\r\n    border: 1px solid blue;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    border: 1px solid red;\r\n    padding: 10px;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/swiper.min.css\";\r\n\r\n// https://stackoverflow.com/questions/69154197/module-not-found-cant-resolve-swiper-css\r\n// 스와이퍼 설치하고 사용할때는 해당버전을 이용하도록 하자 (6.8.4)\r\nconst Slide = () => {\r\n    return (\r\n        <Swiper\r\n            spaceBetween={50}\r\n            slidesPerView={1}\r\n            onSlideChange={() => console.log(\"slide change\")}\r\n            onSwiper={(swiper) => console.log(swiper)}\r\n        >\r\n            <SwiperSlide>\r\n                <SlideCover>정</SlideCover>\r\n            </SwiperSlide>\r\n            <SwiperSlide>\r\n                <SlideCover>정재</SlideCover>\r\n            </SwiperSlide>\r\n            <SwiperSlide>\r\n                <SlideCover>정재훈</SlideCover>\r\n            </SwiperSlide>\r\n            <SwiperSlide>\r\n                <SlideCover>정재훈정</SlideCover>\r\n            </SwiperSlide>\r\n        </Swiper>\r\n    );\r\n};\r\n\r\nexport default Slide;\r\n\r\nconst SlideCover = styled.div`\r\n    border: 1px solid red;\r\n    cursor: pointer;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n    AiOutlineHome,\r\n    AiFillHome,\r\n    AiOutlineBell,\r\n    AiFillBell,\r\n} from \"react-icons/ai\";\r\n\r\nimport { IoCartOutline, IoCartSharp } from \"react-icons/io5\";\r\nimport {\r\n    RiUser3Line,\r\n    RiUser3Fill,\r\n    RiCheckboxMultipleBlankLine,\r\n    RiCheckboxMultipleBlankFill,\r\n} from \"react-icons/ri\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n    const [activeNavIndex, setActiveNavIndex] = useState(1);\r\n\r\n    return (\r\n        <StyledNav>\r\n            <NavLink\r\n                to=\"/\"\r\n                onClick={() => {\r\n                    setActiveNavIndex(1);\r\n                }}\r\n            >\r\n                {activeNavIndex === 1 ? <AiFillHome /> : <AiOutlineHome />}\r\n            </NavLink>\r\n            <NavLink\r\n                to=\"/star\"\r\n                onClick={() => {\r\n                    setActiveNavIndex(2);\r\n                }}\r\n            >\r\n                {activeNavIndex === 2 ? <AiFillBell /> : <AiOutlineBell />}\r\n            </NavLink>\r\n            <NavLink\r\n                to=\"/react-hook-form\"\r\n                onClick={() => {\r\n                    setActiveNavIndex(3);\r\n                }}\r\n            >\r\n                {activeNavIndex === 3 ? <IoCartSharp /> : <IoCartOutline />}\r\n            </NavLink>\r\n            <NavLink\r\n                to=\"/slide\"\r\n                onClick={() => {\r\n                    setActiveNavIndex(4);\r\n                }}\r\n            >\r\n                {activeNavIndex === 4 ? <RiUser3Fill /> : <RiUser3Line />}\r\n            </NavLink>\r\n            <NavLink\r\n                to=\"/star\"\r\n                onClick={() => {\r\n                    setActiveNavIndex(5);\r\n                }}\r\n            >\r\n                {activeNavIndex === 5 ? (\r\n                    <RiCheckboxMultipleBlankFill />\r\n                ) : (\r\n                    <RiCheckboxMultipleBlankLine />\r\n                )}\r\n            </NavLink>\r\n        </StyledNav>\r\n    );\r\n};\r\n\r\nexport default Nav;\r\n\r\nconst StyledNav = styled.nav`\r\n    background-color: #fff;\r\n    border-top: 1px solid #ececec;\r\n    max-width: 1200px;\r\n    width: 100%;\r\n    margin: auto;\r\n    display: flex;\r\n    align-items: center;\r\n    position: fixed;\r\n    bottom: 0;\r\n    left: 50%;\r\n    transform: translate(-50%);\r\n`;\r\nconst NavLink = styled(Link)`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 20%;\r\n    font-size: 2rem;\r\n    color: #131313;\r\n    padding: 10px;\r\n`;\r\n","import StarRating from \"./functions/start-rating/starRating\";\nimport { HashRouter, Route, Link } from \"react-router-dom\";\nimport ReactHookForm from \"./functions/react-hook-form/reactHookForm\";\nimport styled from \"styled-components\";\nimport Slide from \"./functions/slide/Slide\";\nimport Nav from \"./functions/nav/Nav\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <HashRouter>\n                <Links>\n                    <NewLink to=\"/star\">별점</NewLink>\n                    <NewLink to=\"/react-hook-form\">리액트 훅 폼</NewLink>\n                    <NewLink to=\"/slide\">슬라이드</NewLink>\n                    <NewLink to=\"/nav\">네비게이션</NewLink>\n                </Links>\n                <Route exact path=\"/star\">\n                    <StarRating />\n                </Route>\n                <Route exact path=\"/react-hook-form\">\n                    <ReactHookForm />\n                </Route>\n                <Route exact path=\"/slide\">\n                    <Slide></Slide>\n                </Route>\n                <Nav />\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default App;\n\nconst Links = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    gap: 10px;\n`;\n\nconst NewLink = styled(Link)`\n    padding: 10px;\n    text-decoration: none;\n    color: #fff;\n    background-color: #333;\n    border-radius: 5px;\n    margin-bottom: 30px;\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}